services:
  postgres_user:
    image: postgres:14
    container_name: postgres_user_db
    env_file:
      - .env
    environment:

      POSTGRES_DB: ${POSTGRES_DB_USER_SERVICE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_user_data:/var/lib/postgresql/data
    healthcheck:

      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      retries: 5
    networks:
      - app_network

  postgres_matchtracker:
    image: postgres:14
    container_name: postgres_matchtracker_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB_MATCHTRACKER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_matchtracker_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      retries: 5
    networks:
      - app_network

  user_service:
    build:
      context: ./user-service
    container_name: user_service
    env_file:
      - .env
    ports:
      - "8080:8080"
    environment:

      POSTGRES_HOST: ${POSTGRES_HOST_USER}
      POSTGRES_DB: ${POSTGRES_DB_USER_SERVICE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres_user:
        condition: service_healthy
    networks:
      - app_network
    volumes:
      - ./user-service:/usr/src/app/user-service
      - ./user-service/logs:/usr/src/app/logs

  matchtracker_service:
    build:
      context: ./matchtracker-service
    container_name: matchtracker_service
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST_MATCHTRACKER}
      POSTGRES_DB: ${POSTGRES_DB_MATCHTRACKER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
    depends_on:
      postgres_matchtracker:
        condition: service_healthy
      user_service:
        condition: service_started
    networks:
      - app_network
    volumes:
      - ./matchtracker-service:/usr/src/app/matchtracker-service
      - ./matchtracker-service/logs:/usr/src/app/logs

volumes:
  postgres_user_data:
  postgres_matchtracker_data:

networks:
  app_network:
    driver: bridge
